version 3
run Wireless01-0-20230814-18:08:52-6651
attr configname Wireless01
attr datetime 20230814-18:08:52
attr datetimef 20230814-180852
attr experiment Wireless01
attr inifile omnetpp.ini
attr iterationvars ""
attr iterationvarsd ""
attr iterationvarsf ""
attr measurement ""
attr network WirelessA
attr processid 6651
attr repetition 0
attr replication #0
attr resultdir results
attr runnumber 0
attr seedset 0
config image-path ../inet4.5/images
config description "Two hosts communicating wirelessly"
config network WirelessA
config scheduler-class inet::RealTimeScheduler
config *.hostA.numApps 1
config *.hostA.app[0].typename UdpBasicApp
config *.hostA.app[0].destAddresses "\"hostB\""
config *.hostA.app[0].destPort 5000
config *.hostA.app[0].messageLength 1000B
config *.hostA.app[0].sendInterval exponential(12ms)
config *.hostA.app[0].packetName "\"UDPData\""
config *.hostB.numApps 1
config *.hostB.app[0].typename UdpSink
config *.hostB.app[0].localPort 5000
config *.host*.wlan[0].typename ExtUpperIeee80211Interface
config *.host*.wlan[0].copyConfiguration "\"copyFromExt\""
config *.hostA.wlan[0].device "\"tapa\""
config *.hostB.wlan[0].device "\"tapb\""
config *.host*.wlan[0].mac.useAck false
config *.host*.wlan[0].mac.fullDuplex false
config *.host*.wlan[0].radio.transmitter.analogModel.communicationRange 500m
config *.host*.wlan[0].radio.receiver.ignoreInterference true
config *.host*.wlan[0].mac.headerLength 23B

vector 0 WirelessA.hostA.wlan[0].mac.dcf frameSequenceActive:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source warmup(count(frameSequenceStarted)-count(frameSequenceFinished))
attr title "frame sequence active"
vector 1 WirelessA.hostA.wlan[0].mac.dcf.channelAccess.inProgressFrames queueLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(count(packetEnqueued) - count(packetDequeued))"
attr title "queue length"
vector 2 WirelessA.hostA.wlan[0].mac.dcf.channelAccess.contention backoffActive:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source warmup(count(backoffStarted)-count(backoffStopped))
attr title "backoff active"
vector 3 WirelessA.hostA.udp passedUpPk:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetSentToUpper
attr title "packets passed up, count"
vector 4 WirelessA.hostA.udp droppedPkWrongPort:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
vector 5 WirelessA.hostA.udp droppedPkBadChecksum:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
vector 6 WirelessA.hostB.wlan[0].mac.dcf frameSequenceActive:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source warmup(count(frameSequenceStarted)-count(frameSequenceFinished))
attr title "frame sequence active"
vector 7 WirelessA.hostB.wlan[0].mac.dcf.channelAccess.inProgressFrames queueLength:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source "warmup(count(packetEnqueued) - count(packetDequeued))"
attr title "queue length"
vector 8 WirelessA.hostB.wlan[0].mac.dcf.channelAccess.contention backoffActive:vector ETV
attr autoWarmupFilter false
attr interpolationmode sample-hold
attr recordingmode vector
attr source warmup(count(backoffStarted)-count(backoffStopped))
attr title "backoff active"
vector 9 WirelessA.hostB.udp passedUpPk:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetSentToUpper
attr title "packets passed up, count"
vector 10 WirelessA.hostB.udp droppedPkWrongPort:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsNoPortFound(packetDropped)
attr title "packets dropped (wrong port), count"
vector 11 WirelessA.hostB.udp droppedPkBadChecksum:vector(count) ETV
attr interpolationmode none
attr recordingmode vector(count)
attr source packetDropReasonIsIncorrectlyReceived(packetDropped)
attr title "packets dropped (checksum error), count"
vector 12 WirelessA.hostA.wlan[0].radio radioMode:vector ETV
attr interpolationmode sample-hold
attr recordingmode vector
attr source radioModeChanged
attr title "Radio mode"
0	0	0	0
0	0	0	0
1	0	0	0
1	0	0	0
2	0	0	0
2	0	0	0
3	0	0	0
4	0	0	0
5	0	0	0
6	0	0	0
6	0	0	0
7	0	0	0
7	0	0	0
8	0	0	0
8	0	0	0
9	0	0	0
10	0	0	0
11	0	0	0
12	0	0	0

